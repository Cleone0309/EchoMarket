Desenvolver um projeto de e-commerce moderno com as seguintes caracter√≠sticas:

üõí Funcionalidades do E-commerce
Front-end:

Construir com Next.js (ou alternativamente React.js se preferir mais simplicidade).

Estilizar com Tailwind CSS para responsividade total.

P√°ginas principais:

Home (com banners, destaques e promo√ß√µes).

Listagem de Produtos (com filtros e busca).

P√°gina de Detalhes do Produto.

Carrinho de Compras.

Checkout simplificado.

Login e Cadastro de usu√°rios.

√Årea do Cliente (Meus Pedidos).

Back-end:

Utilizar o Supabase para:

Banco de dados (PostgreSQL).

Storage de imagens de produtos.

Autentica√ß√£o de usu√°rios (registro/login seguro).

Fun√ß√µes serverless (Edge Functions) para l√≥gica customizada.

Integra√ß√µes de Intelig√™ncia Artificial:

Descri√ß√£o autom√°tica de produtos:

Upload de imagem do produto no painel administrativo.

Chamada √† API da OpenAI (usando modelo GPT-4-Vision ou GPT-4 Turbo).

IA deve gerar:

T√≠tulo

Descri√ß√£o

Sugest√£o de categorias

Tags de SEO

Recomenda√ß√µes Inteligentes:

IA sugere produtos similares na p√°gina de produto e na √°rea de carrinho.

WhatsApp Chatbot Automatizado:

Integrar com a API Oficial do WhatsApp (Cloud API) ou Twilio.

O chatbot deve:

Responder status de pedidos automaticamente.

Indicar produtos com base em prefer√™ncias do cliente.

Recuperar carrinhos abandonados enviando ofertas.

Direcionar para atendimento humano se necess√°rio.

üîó Tecnologias espec√≠ficas
Frontend: Next.js 14, TailwindCSS

Backend: Supabase (Auth, Database, Storage, Edge Functions)

IA: OpenAI API (GPT-4 Turbo ou Vision)

Mensageria: WhatsApp Cloud API (ou alternativa via webhook e Twilio/360Dialog)

Gateway de Pagamento: Stripe (ou Mercado Pago, se preferir)

üõ†Ô∏è Requisitos t√©cnicos
Projeto estruturado em pastas organizadas (components, pages, lib, services).

Uso de Prisma ORM (opcional, se quiser camadas de servi√ßos adicionais com Supabase).

Conex√£o segura com Supabase usando vari√°veis de ambiente (n√£o hardcoded).

APIs externas (OpenAI, WhatsApp) com seguran√ßa b√°sica (auth tokens escondidos).

Sistema de rotas privadas para proteger √°rea de admin e √°rea do cliente.

Deploy (simulado) no pr√≥prio Replit ou export√°vel para Vercel em produ√ß√£o.

‚ú® Extras desejados (Se poss√≠vel)
Sistema de Cupons no Checkout.

Envio de e-mails autom√°ticos p√≥s-compra.

Painel Administrativo responsivo para celular e desktop.

Notifica√ß√µes Web Push de promo√ß√µes (opcional).

SEO otimizado em p√°ginas principais.

üî• Resumo final
Em resumo:
Quero um e-commerce full-stack constru√≠do no Replit, usando Next.js + Supabase, integrado com IA para gerar descri√ß√µes autom√°ticas a partir de imagens de produtos, e chatbot no WhatsApp que interaja automaticamente com clientes, tudo organizado para f√°cil deploy futuro em Vercel.

üöÄ Instru√ß√µes finais para a IA:
Configure todos os arquivos de ambiente necess√°rios (.env.local).

Crie o esquema inicial no Supabase (tabelas: usu√°rios, produtos, pedidos, categorias, cupons, avalia√ß√µes, etc).

Simule uma integra√ß√£o funcional de IA para gera√ß√£o de descri√ß√µes.

Simule integra√ß√µes com WhatsApp usando webhooks b√°sicos se n√£o conseguir acessar a API oficial durante testes.

‚úÖ Quero que voc√™ me entregue:

C√≥digo completo.

Link para visualiza√ß√£o online no pr√≥prio Replit.

Instru√ß√µes de como fazer deploy em produ√ß√£o (Vercel ou outro).

üì• Fim do prompt.
‚úÖ Pronto! Esse prompt √© muito bem detalhado para usar no Replit ‚Äî seja para programar via IA ou at√© para entregar para um programador.

Se voc√™ quiser, agora posso:

Gerar tamb√©m o PDF + Slide resumido do projeto que voc√™ pediu.

Escrever o primeiro arquivo README.md j√° formatado para o reposit√≥rio do Replit.